// <auto-generated />
using System;
using CoreLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreLibrary.Migrations
{
    [DbContext(typeof(ProyectDBContext))]
    [Migration("20250409211041_NuevaPropiedadEnServicios")]
    partial class NuevaPropiedadEnServicios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreLibrary.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Citas");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ClienteId = -1,
                            Estado = 0,
                            FechaHora = new DateTime(2025, 4, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            VehiculoId = -1
                        },
                        new
                        {
                            Id = -2,
                            ClienteId = -1,
                            Estado = 1,
                            FechaHora = new DateTime(2025, 4, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            VehiculoId = -2
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.CitaServicio", b =>
                {
                    b.Property<int>("CitaId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("CitaId", "ServicioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("CitasServicios");
                });

            modelBuilder.Entity("CoreLibrary.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = -2,
                            Correo = "randall@gmail.com",
                            NombreCompleto = "Randall Montero",
                            Telefono = "12345678",
                            UsuarioId = -1
                        },
                        new
                        {
                            Id = -1,
                            Correo = "jeffrey@gmail.com",
                            NombreCompleto = "Jeffrey Samuel",
                            Telefono = "12345678",
                            UsuarioId = -2
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitaId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("CoreLibrary.Models.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Datos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaGenerado")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneradoPor")
                        .HasColumnType("int");

                    b.Property<string>("TipoReporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneradoPor");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("CoreLibrary.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Activo = true,
                            Descripcion = "Cambio de aceite y filtro.",
                            Duracion = 60,
                            Nombre = "Cambio de Aceite",
                            Precio = 29.99m
                        },
                        new
                        {
                            Id = -2,
                            Activo = true,
                            Descripcion = "Inspección y ajuste de frenos.",
                            Duracion = 90,
                            Nombre = "Revisión de Frenos",
                            Precio = 49.99m
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contrasenna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Apellido = "Montero",
                            Contrasenna = "12",
                            Correo = "randall@gmail.com",
                            FechaRegistro = new DateTime(2025, 4, 7, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Randall",
                            Rol = 0
                        },
                        new
                        {
                            Id = -2,
                            Apellido = "Samuel",
                            Contrasenna = "123",
                            Correo = "jeffrey@gmail.com",
                            FechaRegistro = new DateTime(2025, 4, 7, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Jeffrey",
                            Rol = 2
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ClienteId = -1,
                            Color = "Rojo",
                            Marca = "Toyota",
                            Modelo = "Corolla",
                            Placa = "ABC123",
                            Tipo = "Sedán"
                        },
                        new
                        {
                            Id = -2,
                            ClienteId = -1,
                            Color = "Azul",
                            Marca = "Honda",
                            Modelo = "Civic",
                            Placa = "XYZ789",
                            Tipo = "SUV"
                        });
                });

            modelBuilder.Entity("CoreLibrary.Models.Cita", b =>
                {
                    b.HasOne("CoreLibrary.Models.Cliente", "Cliente")
                        .WithMany("Citas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreLibrary.Models.Vehiculo", "Vehiculo")
                        .WithMany("Citas")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("CoreLibrary.Models.CitaServicio", b =>
                {
                    b.HasOne("CoreLibrary.Models.Cita", "Cita")
                        .WithMany("CitasServicios")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreLibrary.Models.Servicio", "Servicio")
                        .WithMany("CitasServicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("CoreLibrary.Models.Cliente", b =>
                {
                    b.HasOne("CoreLibrary.Models.Usuario", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("CoreLibrary.Models.Cliente", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoreLibrary.Models.Notificacion", b =>
                {
                    b.HasOne("CoreLibrary.Models.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CoreLibrary.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CoreLibrary.Models.Reporte", b =>
                {
                    b.HasOne("CoreLibrary.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("GeneradoPor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CoreLibrary.Models.Vehiculo", b =>
                {
                    b.HasOne("CoreLibrary.Models.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CoreLibrary.Models.Cita", b =>
                {
                    b.Navigation("CitasServicios");
                });

            modelBuilder.Entity("CoreLibrary.Models.Cliente", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("CoreLibrary.Models.Servicio", b =>
                {
                    b.Navigation("CitasServicios");
                });

            modelBuilder.Entity("CoreLibrary.Models.Usuario", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("CoreLibrary.Models.Vehiculo", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
